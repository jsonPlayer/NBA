<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nba.mapper.UserDAO">
  <resultMap id="BaseResultMap" type="com.nba.model.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="isadmin" jdbcType="INTEGER" property="isadmin" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="threads" jdbcType="INTEGER" property="threads" />
    <result column="posts" jdbcType="INTEGER" property="posts" />
    <result column="credits" jdbcType="INTEGER" property="credits" />
    <result column="golds" jdbcType="INTEGER" property="golds" />
    <result column="create_date" jdbcType="INTEGER" property="createDate" />
    <result column="login_date" jdbcType="INTEGER" property="loginDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `uid`, isadmin, email, username, `password`, threads, posts, credits, golds, create_date, 
    login_date
  </sql>
  <select id="selectByExample" parameterType="com.nba.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where `uid` = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where `uid` = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nba.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nba.model.User">
    insert into user (`uid`, isadmin, email, 
      username, `password`, threads, 
      posts, credits, golds, 
      create_date, login_date)
    values (#{uid,jdbcType=INTEGER}, #{isadmin,jdbcType=INTEGER}, #{email,jdbcType=CHAR}, 
      #{username,jdbcType=CHAR}, #{password,jdbcType=CHAR}, #{threads,jdbcType=INTEGER}, 
      #{posts,jdbcType=INTEGER}, #{credits,jdbcType=INTEGER}, #{golds,jdbcType=INTEGER}, 
      #{createDate,jdbcType=INTEGER}, #{loginDate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nba.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="isadmin != null">
        isadmin,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="threads != null">
        threads,
      </if>
      <if test="posts != null">
        posts,
      </if>
      <if test="credits != null">
        credits,
      </if>
      <if test="golds != null">
        golds,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="isadmin != null">
        #{isadmin,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=CHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="threads != null">
        #{threads,jdbcType=INTEGER},
      </if>
      <if test="posts != null">
        #{posts,jdbcType=INTEGER},
      </if>
      <if test="credits != null">
        #{credits,jdbcType=INTEGER},
      </if>
      <if test="golds != null">
        #{golds,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=INTEGER},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nba.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.isadmin != null">
        isadmin = #{record.isadmin,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=CHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.threads != null">
        threads = #{record.threads,jdbcType=INTEGER},
      </if>
      <if test="record.posts != null">
        posts = #{record.posts,jdbcType=INTEGER},
      </if>
      <if test="record.credits != null">
        credits = #{record.credits,jdbcType=INTEGER},
      </if>
      <if test="record.golds != null">
        golds = #{record.golds,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=INTEGER},
      </if>
      <if test="record.loginDate != null">
        login_date = #{record.loginDate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set `uid` = #{record.uid,jdbcType=INTEGER},
      isadmin = #{record.isadmin,jdbcType=INTEGER},
      email = #{record.email,jdbcType=CHAR},
      username = #{record.username,jdbcType=CHAR},
      `password` = #{record.password,jdbcType=CHAR},
      threads = #{record.threads,jdbcType=INTEGER},
      posts = #{record.posts,jdbcType=INTEGER},
      credits = #{record.credits,jdbcType=INTEGER},
      golds = #{record.golds,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=INTEGER},
      login_date = #{record.loginDate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nba.model.User">
    update user
    <set>
      <if test="isadmin != null">
        isadmin = #{isadmin,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=CHAR},
      </if>
      <if test="threads != null">
        threads = #{threads,jdbcType=INTEGER},
      </if>
      <if test="posts != null">
        posts = #{posts,jdbcType=INTEGER},
      </if>
      <if test="credits != null">
        credits = #{credits,jdbcType=INTEGER},
      </if>
      <if test="golds != null">
        golds = #{golds,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=INTEGER},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=INTEGER},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nba.model.User">
    update user
    set isadmin = #{isadmin,jdbcType=INTEGER},
      email = #{email,jdbcType=CHAR},
      username = #{username,jdbcType=CHAR},
      `password` = #{password,jdbcType=CHAR},
      threads = #{threads,jdbcType=INTEGER},
      posts = #{posts,jdbcType=INTEGER},
      credits = #{credits,jdbcType=INTEGER},
      golds = #{golds,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=INTEGER},
      login_date = #{loginDate,jdbcType=INTEGER}
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
</mapper>